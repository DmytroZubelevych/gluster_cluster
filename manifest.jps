type: install
version: 1.5
id: gluster_cluster
baseUrl: https://raw.githubusercontent.com/SiryjVyiko/gluster_cluster/master
description:
  short: GlusterFS Cluster (Beta)

name: GlusterFS Cluster
targetRegions:
  type: vz7

onInstall:
  - forEach(clusternode:nodes.storage):
      installGlusterFS: 
        id: ${@clusternode.id}
  - prepareVolumeBricks
  - initiateVolume
  - forEach(clusternode:nodes.storage):
      mountDirectoryToVolume:
        id: ${@clusternode.id}
        address: ${@clusternode.address}

onAfterServiceScaleOut[storage]:
  - forEach(newnode:event.response.nodes):
      addBrickToVolume:
        address: ${@newnode.address}
        id: ${@newnode.id}

onBeforeScaleIn[storage]:
  - forEach(removednode:event.response.nodes):
      removeBrickFromVolume:
        address: ${@removednode.address}
        
settings:
  main:
    fields:
    - name: directory
      caption: Path to 
      type: text                                                                                                                                    
    - type: spinner                                                                                                                                 
      name: nodes                                                                                                                                                                                                                
      caption: N of nodes                                                                                                                                                                                                        
      min: 2                                                                                                                                                                                                                     
      max: 5                                                                                                                                                                                                                     
      default: 2                                                                                                                                                                                                                 
                                                                                                                                                                                                                                 
nodes:                                                                                                                                                                                                                           
  nodeType: storage                                                                                                                                                                                                              
  nodeGroup: storage                                                                                                                                                                                                             
  count: ${settings.nodes}                                                                                                                                                                                                       
  cloudlets: 8                                                                                                                                                                                                                   
                                                                                                                                                                                                                                 
actions:                                                                                                                                                                                                                         
  installGlusterFS:                                                                                                                                                                                                              
    - cmd[${this.id}]: |-
        yum -y install epel-release; yum -y update; yum -y install centos-release-gluster41; yum -y install glusterfs gluster-cli glusterfs-libs glusterfs-server; yum clean all; rm -rf /var/cache/yum; systemctl enable glusterd.service; /bin/systemctl start glusterd.service; mkdir -p /glustervolume ${settings.directory};
      user: root
  
  addPeer:
    - cmd[${nodes.storage.master.id}]: gluster peer probe ${this.address};
                                                                                                                                                                                                                                 
  prepareVolumeBricks:                                                                                                                                                                                                                                                                                                                                                                                                 
    forEach(clusternode:nodes.storage):                                                                                                                                                                                          
      if (${@clusternode.id} != ${nodes.storage.master.id}):                                                                                                                                                                     
        addPeer:
            address: ${@clusternode.address}
          
  initiateVolume:
    - cmd[${nodes.storage.master.id}]: |-
        BRICKS_ADDRESSES=$(gluster peer status|grep Hostname| awk '{print $2}'); BRICKS_STRING="${nodes.storage.master.address}:/glustervolume"; for i in ${BRICKS_ADDRESSES}; do BRICKS_STRING="${BRICKS_STRING} ${i}:/glustervolume"; done; gluster volume create jelastic replica ${settings.nodes} transport tcp ${BRICKS_STRING} force; gluster volume start jelastic
      user: root
      
  mountDirectoryToVolume:
    - cmd[${this.id}]: |-
        mount -t glusterfs ${this.address}:/jelastic ${settings.directory}
      user: root
      
  addNewNodeToVolume:
    - cmd[${nodes.storage.master.id}]: |-
        let "NUMBER_OF_BRICKS=$(gluster peer status |grep 'Number of Peers'|awk '{print $4}') + 1"; gluster volume add-brick jelastic replica ${NUMBER_OF_BRICKS} ${this.address}:/glustervolume force
      user: root
        
  addBrickToVolume:
    - installGlusterFS:
        id: ${this.id}
    - addPeer:
        address: ${this.address}
    - addNewNodeToVolume:
        address: ${this.address}
    - mountDirectoryToVolume:
        id: ${this.id}
        address: ${this.address}
        
  removeBrickFromVolume:
    - cmd[${nodes.storage.master.id}]: |-
        let "NUMBER_OF_BRICKS=$(gluster peer status |grep 'Number of Peers'|awk '{print $4}') + 1"; gluster volume remove-brick jelastic replica ${NUMBER_OF_BRICKS} ${this.address}:/glustervolume commit;
